#!/bin/bash
DIR="$(cd "$(dirname "${BASH_SOURCE[0]}" )" && pwd )"
INFO=$DIR/../../util/info
ERROR=$DIR/../../util/error

if [ "$#" -ne 5 ]; then
	$ERROR "CROSS-GCC" "usage: $0 <absolute prefix> <gcc-version> <binutils-version> <target> <sysroot>"
	$ERROR "CROSS-GCC" "only $# arguments given"
	exit 1;
fi

GCC_DIR=$1
GCC_URL=https://ftp.gnu.org/gnu/gcc/gcc-$2/gcc-$2.tar.gz
BINUTILS_URL=https://ftp.gnu.org/gnu/binutils/binutils-$3.tar.gz
GCC_TARGET=$4
SYSROOT=$5

$INFO "MAKE" "downloading user gcc"
mkdir -p $GCC_DIR/gcc
wget -c -q -O $GCC_DIR/gcc.tar.gz $GCC_URL
$INFO "MAKE" "downloading user binutils"
mkdir -p $GCC_DIR/binutils
wget -c -q -O $GCC_DIR/binutils.tar.gz $BINUTILS_URL
$INFO "MAKE" "preparing user gcc + binutils"
tar xzf $GCC_DIR/gcc.tar.gz --strip-components=1 -C $GCC_DIR/gcc
tar xzf $GCC_DIR/binutils.tar.gz --strip-components=1 -C $GCC_DIR/binutils
bash -c "cd $GCC_DIR/gcc; ./contrib/download_prerequisites" 2>&1 /dev/null
mkdir -p $GCC_DIR/binutils-build
$INFO "PATCH" "patching user binutils"
cd $GCC_DIR
patch -p0 < ../../patches/user-binutils/bfd/config.bfd.patch
patch -p0 < ../../patches/user-binutils/gas/configure.tgt.patch
patch -p0 < ../../patches/user-binutils/ld/configure.tgt.patch
patch -p0 < ../../patches/user-binutils/ld/Makefile.am.patch
patch -p0 < ../../patches/user-binutils/config.sub.patch
cp ../../patches/user-binutils/ld/emulparams/elf_*_vineyard.sh binutils/ld/emulparams/
cd binutils/ld
automake
$INFO "PATCH" "patching user gcc"
cd $GCC_DIR
patch -p0 < ../../patches/user-gcc/config.sub.patch
patch -p0 < ../../patches/user-gcc/fixincludes/mkfixinc.sh.patch
patch -p0 < ../../patches/user-gcc/gcc/config.gcc.patch
patch -p0 < ../../patches/user-gcc/libgcc/config.host.patch
patch -p0 < ../../patches/user-gcc/libstdc++-v3/crossconfig.m4.patch
cp ../../patches/user-gcc/gcc/config/vineyard.h gcc/gcc/config/
cd gcc/libstdc++-v3
autoconf
$INFO "MAKE" "building user binutils"
cd $GCC_DIR/binutils-build;
../binutils/configure --quiet --target=$GCC_TARGET --prefix="$GCC_DIR" --with-sysroot="$SYSROOT" --disable-nls --disable-werror;
make -s -j4;
make install -s;
make clean -s
$INFO "MAKE" "building user gcc"
mkdir -p $GCC_DIR/gcc-build
cd $GCC_DIR/gcc-build;
../gcc/configure --quiet --target=$GCC_TARGET --prefix="$GCC_DIR" --disable-nls --enable-languages=c,c++ --with-sysroot="$SYSROOT";
make -j4 all-gcc -s;
make -j4 all-target-libgcc -s;
make install-gcc -s;
make install-target-libgcc -s;
make clean -s
